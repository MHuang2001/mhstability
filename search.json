[{"path":"https://mhuang2001.github.io/mhstability/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Huang. Author, maintainer.","code":""},{"path":"https://mhuang2001.github.io/mhstability/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Huang M (2023). mhstability: Stability Selection Automatic Threshold Selection using Maximum Likelihood. R package version 0.1.0, https://mhuang2001.github.io/mhstability/.","code":"@Manual{,   title = {mhstability: Stability Selection with Automatic Threshold Selection using Maximum Likelihood},   author = {Martin Huang},   year = {2023},   note = {R package version 0.1.0},   url = {https://mhuang2001.github.io/mhstability/}, }"},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"mhstability","dir":"","previous_headings":"","what":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"Stability Selection Visualisation Tool Automatic Threshold Selection. Extends stability selection introduces automatic threshold selection compute data-adaptive stability cutoff. R Package created complement use stabs objects stabs package. visualises variable selection probability likelihood function plot_stabs. package also includes ats function compute threshold.","code":""},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"Install package via GitHub","code":"devtools::install_github(\"MHuang2001/mhstability\") library(mhstability)"},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"main function create stabs object conduct stability selection using stabs package: object s can inputted function mhstability::plot_stabs, plot variable selection probability scree plot. automatically computes automatic threshold selection (ATS) rate π̂. can manually found using ats function. function can also plot likelihood function, used determine optimal threshold.","code":"s = stabs::stabsel(X, y, cutoff, PFER) # Plot variable selection probability scree plot plot_stabs(s, which = 1)  # Plot likelihood function plot_stabs(s, which = 2)  # Plot variable selection probability scree plot with respect to manual threshold selection and display top 4 variables plot_stabs(s, which = 1, threshold = \"MTS\", top = 4)  # Plot variable selection probability scree plot with respect to automatic threshold selection and display all selected variables plot_stabs(s, which = 1, threshold = \"ATS\", top = \"all\")  # Compute elbow index ats(s, type = \"index\")  # Compute ATS cutoff ats(s, type = \"prob\")"},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"theory","dir":"","previous_headings":"","what":"Theory","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"Stability selection (SS)  simple process utilises subsampling randomness improve performance variable selection algorithm. SS based aggregation results, given repeated variable selection algorithms multiple subsamples data. key feature SS error bound, can controlled modifying various parameters. Therefore, practitioner can tailor tolerance error simply changing parameters. SS aims improve performance existing variable selection algorithms construct theoretical error control.","code":""},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"framework","dir":"","previous_headings":"","what":"Framework","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"variable selection algorithm aims estimate set signal features S. features indexed {1, …, p}, let S ⊆ {1, …, p} set Noise variables N = {1, …, p} ∖ S. equivalent set signal variables containing non-zero coefficients, S = {k : βk ≠ 0}, inverse set noise variables containing coefficient zero, N = {k : βk = 0}. estimation set signal features Ŝ selected variables given feature selection algorithm, LASSO. feature selection algorithms regularisation parameter λ LASSO, Stepwise Selection, Elastic Net, note Ŝ function λ, denote Ŝλ = {k : βk ≠ 0}, k = 1, …, p set selected variables λ ∈ Λ. every value λ ∈ Λ, feature selection algorithm estimate Ŝλ goal selecting right Ŝλ probability selected Ŝλ identical true set S high probability. Formally, aim consistent variable selection (stability variables) equivalent ℙ(Ŝλ=S) → 1. estimated set derived subsample data . useful visualisation regularisation path determining optimal value λ ∈ Λ. regularisation path shows coefficient variables values λ; {β̂kλ; λ ∈ Λ, k = 1, …, p}. extension regularisation path stability path, replaces coefficients variables, probability variable selected randomly resampling data. Let random subsample {1, …, n} (n= number entries), equal probabilities size $\\lfloor \\frac{n}{2}\\rfloor$ drawn without replacement. Let Ŝλ() represent subsample function regularisation parameter λ. Let K ⊆ {1, …, p} denote every set features p. , probability set features selected set Ŝλ() $$\\hat{\\mathbb{P}}^\\lambda _K  = \\mathbb{P} \\left(K\\subseteq \\hat{S} ^\\lambda ()\\right)$$ attractive property SS can derived bound expected number V falsely selected variables, V = |N∩Ŝstable|. definition falsely selected variable variable deemed stable reality belongs noise set N. Denote ŜΛ = ⋃λ ∈ ΛŜλ union set selected variables varying regularisation parameter λ. $q_\\Lambda = \\E (|\\hat{S} ^\\Lambda ()| )$ average number selected variables per run. error bound maximum number allowed falsely selected variables can mathematically described incorporating qΛ, ℙi, number features p. error bound helpful, theoretical advantage, requires assumptions, including exchangeability noise variables. Given exchangeability assumption noise variables quite hard prove practice, Shah & Samworth (2013) introduced version SS, Complementary Pairs Stability Selection (CPSS), requires exchangeability assumption. authors introduce different sampling method, straying away random subsampling original authors utilises. new sampling method features samples data set size $\\lfloor \\frac{n}{2}\\rfloor$ intersect. Let subsamples drawn complementary pairs {1, …, n}. subsampling procedure outputs index sets {(A2j − 1,A2j) : j = 1, …, B}, Aj subset {1, …, n} size $\\lfloor \\frac{n}{2}\\rfloor$ A2j − 1 ∩ A2j = ∅. ℙi ∈ [0,1], simultaneous selection version Ŝn $\\hat{S}^{\\text{CPSS}} _{n,\\mathbb{P}} = \\{k:\\hat{\\mathbb{P}}_B (k) \\geq \\mathbb{P}\\}$, function $\\hat{\\mathbb{P}}_B:\\{1,\\dots,p\\} \\rightarrow \\{0, 1/(2B),1/B,\\dots, B\\}$ given $$\\hat{\\mathbb{P}} _B (k) = \\frac{1}{2B} \\sum^{2B} _{j=1} \\mathbf{1}_{k\\\\hat{S} (A_{j})} $$ methodology steps using SS CPSS change, steps hereafter determining stable set Ŝ identical. difference lies sampling step. Given data sampled pairs twice time, authors recommend letting B = 50, yielding 100 samples, number samples SS B = 100. Since pairs A2j − 1 ∩ A2j = ∅ A2j − 1 ∪ A2j = , set data points, loss data due chance, sampling process always considers data points. mitigates possible loss information SS, random subsampling guarantee information used. $$\\hat{\\mathbb{P}} _B (k) = \\frac{1}{2B} \\sum^{2B} _{j=1} \\mathbf{1}_{k\\\\hat{S} (A_{j})} $$","code":""},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"notice","dir":"","previous_headings":"","what":"Notice","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"work created part Honours degree University Sydney 2023.","code":""},{"path":"https://mhuang2001.github.io/mhstability/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Stability Selection with Automatic Threshold Selection using Maximum Likelihood","text":"Meinshausen, N. Buehlmann, P. (2009). Stability Selection. arXiv:0809.2932 [stat] Shah, R. D. Samworth, R. J. (2013). Variable selection error control: another look stability selection. Journal Royal Statistical Society. Series B (Statistical Methodology), 75(1):55–80. Publisher: Wiley. Hofner, B. Hothorn, T. (2021). stabs: Stability Selection Error Control. Zhu, M. Ghodsi, . (2006). Automatic dimensionality selection scree plot via use profile likelihood. Computational Statistics & Data Analysis, 51(2):918–930.","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/ats.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute index and probability of stable threshold using automatic threshold selection — ats","title":"Compute index and probability of stable threshold using automatic threshold selection — ats","text":"Compute index probability stable threshold using automatic threshold selection","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/ats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute index and probability of stable threshold using automatic threshold selection — ats","text":"","code":"ats(s, type = \"index\")"},{"path":"https://mhuang2001.github.io/mhstability/reference/ats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute index and probability of stable threshold using automatic threshold selection — ats","text":"s stabsel object type Either \"index\" \"prob\" return index last selected variable, threshold deeming variables stable","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/ats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute index and probability of stable threshold using automatic threshold selection — ats","text":"Index probability last selected threshold","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot stabsel object — plot_stabs","title":"Plot stabsel object — plot_stabs","text":"Plot stabsel object","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot stabsel object — plot_stabs","text":"","code":"plot_stabs(s, which = 1, threshold = \"ATS\", top = ifelse(s$p < 10, s$p, 10))"},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot stabsel object — plot_stabs","text":"s stabsel object Either 1 plot variable probability, 2 plot likelihood function threshold Show selected MTS ATS variables. Either \"ATS\" \"MTS\" top number plotting top number variables. Use \"\" plot selected variables","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot stabsel object — plot_stabs","text":"Variable Probability Likelihood Plot","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plot stabsel object — plot_stabs","text":"Hofner, B. Hothorn, T. (2021). stabs: Stability Selection Error Control. Meinshausen, N. Buehlmann, P. (2009). Stability Selection. arXiv:0809.2932 [stat] Shah, R. D. Samworth, R. J. (2013). Variable selection error control: another look stability selection. Journal Royal Statistical Society. Series B (Statistical Methodology), 75(1):55–80. Publisher: Wiley. Zhu, M. Ghodsi, . (2006). Automatic dimensionality selection scree plot via use profile likelihood. Computational Statistics & Data Analysis, 51(2):918–930.","code":""},{"path":"https://mhuang2001.github.io/mhstability/reference/plot_stabs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot stabsel object — plot_stabs","text":"","code":"library(mhstability) y = mtcars[,2] X = mtcars[,3:ncol(mtcars)] res = stabs::stabsel(x = X, y = y, B = 50, fitfun = stabs::lars.lasso, PFER = 2, cutoff = 0.6, sampling.type = \"SS\", assumption = \"r-concave\") #> Error in loadNamespace(x): there is no package called ‘stabs’ mhstability::plot_stabs(res, which = 1) #> Error in eval(expr, envir, enclos): object 'res' not found mhstability::plot_stabs(res, which = 2) #> Error in eval(expr, envir, enclos): object 'res' not found"}]
